import{_ as s,o as a,c as n,N as l}from"./chunks/framework.60272d8a.js";const D=JSON.parse('{"title":"写给前端的 docker 使用指南 - 掘金","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/docker/写给前端的docker指南.md","lastUpdated":1706686109000}'),e={name:"knowledge/docker/写给前端的docker指南.md"},p=l(`<h1 id="写给前端的-docker-使用指南-掘金" tabindex="-1">写给前端的 docker 使用指南 - 掘金 <a class="header-anchor" href="#写给前端的-docker-使用指南-掘金" aria-label="Permalink to &quot;写给前端的 docker 使用指南 - 掘金&quot;">​</a></h1><p>富 Web 时代，应用变得越来越强大，与此同时也越来越复杂。集群部署、隔离环境、灰度发布以及动态扩容缺一不可，而容器化则成为中间的必要桥梁。</p><p>docker 使应用部署更加轻量，可移植，可扩展，更好的环境隔离也更大程度地避免了生产环境与测试环境不一致的巨大尴尬。</p><p>由于 docker 轻便可移植的特点也极大促进了 CI/CD 的发展。 就让我们来探索一下 Docker 的神秘世界，从零到一掌握 Docker 的基本原理与实践操作。</p><h2 id="讲个雨前小故事" tabindex="-1">讲个雨前小故事 <a class="header-anchor" href="#讲个雨前小故事" aria-label="Permalink to &quot;讲个雨前小故事&quot;">​</a></h2><p>我需要盖一个房子，于是我搬石头、砍木头、画图纸、盖房子。一顿操作，终于把这个房子盖好了。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a3e862e1f69f42858425a502c6157a17~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>结果，住了一段时间，心血来潮想搬到海边去。这时候按以往的办法，我只能去海边，再次搬石头、砍木头、画图纸、盖房子。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9c5252fa81904480bd909938e0fb0fdd~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>烦恼之际，跑来一个叫Dokcer的魔法师教会我一种魔法。这种魔法可以把我盖好的房子复制一份，做成「镜像」，放在我的背包里。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07aa240cd37145fdb0066392197886f9~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>等我到了海边，就用这个「镜像」，复制一套房子，拎包入住。</p><p>是不是很神奇？对应到我们的项目中来，房子就是项目本身，镜像就是项目的复制，背包就是镜像仓库。如果要动态扩容，从仓库中取出项目镜像，随便复制就可以了。Build once，Run anywhere!</p><h2 id="认识docker" tabindex="-1">认识Docker <a class="header-anchor" href="#认识docker" aria-label="Permalink to &quot;认识Docker&quot;">​</a></h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2c09275e60e947e4836c7323809cbbec~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="术语" tabindex="-1">术语 <a class="header-anchor" href="#术语" aria-label="Permalink to &quot;术语&quot;">​</a></h3><p>docker 的架构图如下</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b83f7ef6f44445fbbd960dfd3d656820~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><blockquote><p>本图片来自官方文档 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdocs.docker.com%2Fget-started%2Foverview%2F%23docker-architecture" title="https://docs.docker.com/get-started/overview/#docker-architecture" target="_blank" rel="noreferrer">Docker architecture</a></p></blockquote><p>从图中可以看出几个组成部分</p><ul><li>docker client: 即 docker 命令行工具</li><li>docker host: 宿主机，docker daemon 的运行环境服务器</li><li>docker daemon: docker 的守护进程，docker client 通过命令行与 docker daemon 交互</li><li>image: 镜像，可以理解为一个容器的模板，通过一个镜像可以创建多个容器</li><li>container: 最小型的一个操作系统环境，可以对各种服务以及应用容器化，是镜像的运行实例</li><li>registry: 镜像仓库，存储大量镜像，可以从镜像仓库拉取和推送镜像</li></ul><p>Docker 技术的三大核心概念，分别是：镜像 Image、容器 Container、仓库 Repository。</p><h2 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h2><h3 id="软件安装" tabindex="-1">软件安装 <a class="header-anchor" href="#软件安装" aria-label="Permalink to &quot;软件安装&quot;">​</a></h3><p>在本地安装 docker/docker-compose，通过 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.docker.com%2Fget-started%2F" title="https://www.docker.com/get-started/" target="_blank" rel="noreferrer">Docker Desktop</a>下载 docker 后，双击安装即可。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40673e23937943c483aaaac567b0428f~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>如果是个人服务器且为 linux，可参考 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdocs.docker.com%2Fengine%2Finstall%2Fcentos%2F" title="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noreferrer">安装 docker</a> ,它将 docker 与 docker compose 一并安装。</p><h3 id="命令行安装" tabindex="-1">命令行安装 <a class="header-anchor" href="#命令行安装" aria-label="Permalink to &quot;命令行安装&quot;">​</a></h3><p>Homebrew 的 Cask 已经支持 Docker for Mac，因此可以很方便的使用 Homebrew Cask 来进行安装，执行如下命令：</p><p><code>brew cask install docker</code></p><p>查看版本</p><p><code>docker -v</code></p><h2 id="使用docker启动一个vue项目" tabindex="-1">使用Docker启动一个vue项目 <a class="header-anchor" href="#使用docker启动一个vue项目" aria-label="Permalink to &quot;使用Docker启动一个vue项目&quot;">​</a></h2><h3 id="新建项目" tabindex="-1">新建项目 <a class="header-anchor" href="#新建项目" aria-label="Permalink to &quot;新建项目&quot;">​</a></h3><p>使用Vue 脚手架构建项目</p><p><code>npm init vue@latest</code></p><p>给项目起个名字，叫做<code>docker-demo-vue</code></p><p>然后一路回车。运行命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">  cd docker-demo-vue</span></span>
<span class="line"><span style="color:#babed8;">  npm install</span></span>
<span class="line"><span style="color:#babed8;">  npm run dev</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>等待安装完毕依赖包，打开<a href="https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A5174%2F%25EF%25BC%258C" title="http://localhost:5174/%EF%BC%8C" target="_blank" rel="noreferrer">http://localhost:5174/，</a></p><p>我们就能看到如下界面：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b3959745fe84ffab9b262f0b020ec7c~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>项目没啥问题，我们对项目进行打包：</p><p><code>npm run build</code></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b59483ca8955418f929b63df4c6b7b14~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>可以看到，项目目录下的 Dist 就是我们要部署的静态资源了。</p><h3 id="新建-dockerfile" tabindex="-1">新建 Dockerfile <a class="header-anchor" href="#新建-dockerfile" aria-label="Permalink to &quot;新建 Dockerfile&quot;">​</a></h3><p>在<code>docker-demo-vue</code>根目录下执行：<code>touch Dockerfile</code></p><p>此时的项目目录结构是这样的：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cd273772060479ba041a9ce76f3bd4e~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="拉取-nginx-镜像" tabindex="-1">拉取 Nginx 镜像 <a class="header-anchor" href="#拉取-nginx-镜像" aria-label="Permalink to &quot;拉取 Nginx 镜像&quot;">​</a></h3><p>首先打开你的Docker，默认会启动。</p><p>控制台拉取 Nginx 镜像：</p><p><code>docker pull nginx</code></p><p>出现下面的信息说明拉取Nginx镜像成功</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/acd02c73c8bd4140a7000daef4a1b858~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>在根目录创建 Nginx 配置文件：</p><p><code>touch default.conf</code></p><p>写入：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#BABED8;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">server_name</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">#charset koi8-r;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">access_log</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">/var/log/nginx/host.access.log</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">error_log</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">/var/log/nginx/error.log</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#FFCB6B;">root</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#FFCB6B;">index</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">index.html</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">error_page</span><span style="color:#BABED8;">   </span><span style="color:#F78C6C;">500</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">502</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">503</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">504</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">/50x.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/50x.html</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#FFCB6B;">root</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="配置镜像" tabindex="-1">配置镜像 <a class="header-anchor" href="#配置镜像" aria-label="Permalink to &quot;配置镜像&quot;">​</a></h3><p>打开<code>Dockerfile</code>文件，写入：</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> nginx  </span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#BABED8;"> dist/ /usr/share/nginx/html/  </span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#BABED8;"> default.conf /etc/nginx/conf.d/default.conf  </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>解释一下代码：</p><ul><li><p><code>FROM nginx</code> 指定该镜像是基于 <code>nginx:latest</code> 镜像而构建的；</p></li><li><p><code>COPY dist/ /usr/share/nginx/html/</code> 命令的意思是将项目根目录下 <code>dist</code> 文件夹中的所有文件复制到镜像中 <code>/usr/share/nginx/html/</code> 目录下；</p></li><li><p><code>COPY default.conf /etc/nginx/conf.d/default.conf</code> 将 <code>default.conf</code> 复制到 <code>etc/nginx/conf.d/default.conf</code>，用本地的 <code>default.conf</code> 配置来替换 Nginx 镜像里的默认配置。</p></li></ul><h3 id="构建镜像" tabindex="-1">构建镜像 <a class="header-anchor" href="#构建镜像" aria-label="Permalink to &quot;构建镜像&quot;">​</a></h3><p>Docker 通过 build 命令来构建镜像：</p><p><code>docker build -t docker-demo-vue .</code></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/72205a4bd7d645e8aba8f94f9720974b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>出现上面的信息，表示构建成成功了。</p><p>参数说明：</p><ul><li><p><code>-t</code> 参数给镜像命名 docker-demo-vue</p></li><li><p><code>.</code> 是基于当前目录的 Dockerfile 来构建镜像</p></li></ul><p>运行<code>docker image ls | grep docker-demo-vue</code>查看镜像</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b89dc49a84eb4e3f8c6a1f74f9497206~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>可以看到我们构建了一个142MB的项目镜像。</p><p>在docker中也可以查看生成的镜像</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b32a3e1fa3d41b0a6a2fabc4f78fe2d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="运行容器" tabindex="-1">运行容器 <a class="header-anchor" href="#运行容器" aria-label="Permalink to &quot;运行容器&quot;">​</a></h3><p><code>docker run -d -p 3000:80 --name docker-vue docker-demo-vue</code></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f987878af7294491bddd75e68bb24e9e~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>参数解释：</p><ul><li><p>-d 设置容器在后台运行</p></li><li><p>-p 表示端口映射，把本机的 3000 端口映射到 container 的 80 端口（这样外网就能通过本机的 3000 端口访问了。</p></li><li><p>--name 设置容器名 docker-vue</p></li><li><p>docker-demo-vue 是我们上面构建的镜像名字</p></li></ul><p>可以运行<code>docker ps -a</code> 查看容器id：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bbe6a154009b48218d88c000043695ab~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>可以看到我们刚才打印的<code>docker-vue</code>的容器id为<code>b6c49793ad48</code>，跟上面的容器id<code>b6c49793ad48ccfc106fab63f988881a1467ae25b5c4c9cee87ad4f3515f9607</code>对应，默认是取了前12位。</p><p>同样的也可以在桌面端看到，正在运行的docker容器</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/93e73388cc0c46d0a709be93248a4193~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="访问项目" tabindex="-1">访问项目 <a class="header-anchor" href="#访问项目" aria-label="Permalink to &quot;访问项目&quot;">​</a></h3><p>我们打开<a href="https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A3000%2F" title="http://localhost:3000/" target="_blank" rel="noreferrer">http://localhost:3000/</a>，就可以在浏览器中看到对应的页面，跟我们前面创建项目的时候看到的界面是一样的</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30e4d4c4caaf4d3e9803e33e5e041bf3~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><p>也可以使用<code>curl -v -i localhost:3000</code> 去查看对应的静态文件</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f86050487dd94dbfba8ffc6e72604a6a~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""> <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e025efe159cd407889d8f41bfe0cac83~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="发布镜像" tabindex="-1">发布镜像 <a class="header-anchor" href="#发布镜像" aria-label="Permalink to &quot;发布镜像&quot;">​</a></h3><p>如果你想为社区贡献力量，那么需要将镜像发布，方便其他开发者使用。</p><p>发布镜像需要如下步骤：</p><p>登陆 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fhub.docker.com" title="https://hub.docker.com" target="_blank" rel="noreferrer">dockerhub</a>，注册账号；</p><p>命令行执行 <code>docker login</code>，之后输入我们的账号密码，进行登录；</p><p>推送镜像之前，需要打一个 Tag，执行 <code>docker tag &lt;image&gt; &lt;username&gt;/&lt;repository&gt;:&lt;tag&gt;</code></p><p>全流程结束，以后我们要使用，再也不需要「搬石头、砍木头、画图纸、盖房子」了，拎包入住。这也是 docker 独特魅力所在。</p><p>以上，就是如何使用docker去运行一个基础项目的示例。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fxiumubai%2Fdocker-demo-vue" title="https://github.com/xiumubai/docker-demo-vue" target="_blank" rel="noreferrer">完整代码示例</a></p><h2 id="底层原理简介" tabindex="-1">底层原理简介 <a class="header-anchor" href="#底层原理简介" aria-label="Permalink to &quot;底层原理简介&quot;">​</a></h2><p><code>docker</code> 底层使用了一些 <code>linux</code> 内核的特性，大概有 <code>namespace</code>，<code>cgroups</code> 和 <code>ufs</code>。</p><h3 id="namespace" tabindex="-1">namespace <a class="header-anchor" href="#namespace" aria-label="Permalink to &quot;namespace&quot;">​</a></h3><p><code>docker</code> 使用 <code>linux namespace</code> 构建隔离的环境，它由以下 <code>namespace</code> 组成</p><ul><li><code>pid</code>: 隔离进程</li><li><code>net</code>: 隔离网络</li><li><code>ipc</code>: 隔离 IPC</li><li><code>mnt</code>: 隔离文件系统挂载</li><li><code>uts</code>: 隔离hostname</li><li><code>user</code>: 隔离uid/gid</li></ul><h2 id="进阶技巧总结" tabindex="-1">进阶技巧总结 <a class="header-anchor" href="#进阶技巧总结" aria-label="Permalink to &quot;进阶技巧总结&quot;">​</a></h2><h3 id="镜像仓库与拉取" tabindex="-1">镜像仓库与拉取 <a class="header-anchor" href="#镜像仓库与拉取" aria-label="Permalink to &quot;镜像仓库与拉取&quot;">​</a></h3><p>大部分时候，我们不需要自己构建镜像，我们可以在<a href="https://link.juejin.cn/?target=https%3A%2F%2Fhub.docker.com%2Fexplore%2F" title="https://hub.docker.com/explore/" target="_blank" rel="noreferrer">官方镜像仓库 Docker Hub</a>拉取镜像。</p><p>可以简单使用命令 <code>docker pull</code> 拉取镜像。</p><p>拉取镜像后可以使用 <code>docker inspect</code> 查看镜像信息，如配置及环境变量等。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 加入拉取一个 node:alpine 的镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">node:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看镜像信息</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">inspect</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">node:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 列出所有镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">images</span></span>
<span class="line"><span style="color:#FFCB6B;">REPOSITORY</span><span style="color:#BABED8;">          </span><span style="color:#C3E88D;">TAG</span><span style="color:#BABED8;">                 </span><span style="color:#C3E88D;">IMAGE</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ID</span><span style="color:#BABED8;">            </span><span style="color:#C3E88D;">CREATED</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">SIZE</span></span>
<span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#BABED8;">                </span><span style="color:#C3E88D;">alpine</span><span style="color:#BABED8;">              </span><span style="color:#C3E88D;">f20a6d8b6721</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">13</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">days</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">         </span><span style="color:#F78C6C;">105</span><span style="color:#C3E88D;">MB</span></span>
<span class="line"><span style="color:#FFCB6B;">mongo</span><span style="color:#BABED8;">               </span><span style="color:#C3E88D;">latest</span><span style="color:#BABED8;">              </span><span style="color:#F78C6C;">965553</span><span style="color:#C3E88D;">e202a4</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">weeks</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">         </span><span style="color:#F78C6C;">363</span><span style="color:#C3E88D;">MB</span></span>
<span class="line"><span style="color:#FFCB6B;">centos</span><span style="color:#BABED8;">              </span><span style="color:#C3E88D;">latest</span><span style="color:#BABED8;">              </span><span style="color:#F78C6C;">9</span><span style="color:#C3E88D;">f38484d220f</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">8</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">months</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">202</span><span style="color:#C3E88D;">MB</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="构建镜像与发布" tabindex="-1">构建镜像与发布 <a class="header-anchor" href="#构建镜像与发布" aria-label="Permalink to &quot;构建镜像与发布&quot;">​</a></h3><p>但并不是所有的镜像都可以在镜像仓库中找到，另外我们也需要为我们自己的业务应用去构建镜像。</p><p>使用 <code>docker build</code> 构建镜像，<strong><code>docker build</code> 会使用当前目录的 <code>Dockerfile</code> 构建镜像</strong>，至于 <code>Dockerfile</code> 的配置，参考下节。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;"># -t node-base:10: 指定镜像以及版本号</span></span>
<span class="line"><span style="color:#babed8;"># .: 指当前路径</span></span>
<span class="line"><span style="color:#babed8;">$ docker build -t node-base:10 .</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>当构建镜像成功后可以使用 <code>docker push</code> 推送到镜像仓库。</p><h3 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h3><p>在使用 <code>docker</code> 部署自己应用时，往往需要独立构建镜像。</p><p><code>docker</code> 使用 <code>Dockerfile</code> 作为配置文件构建镜像，简单看一个 <code>node</code> 应用构建的 <code>dockerfile</code>。</p><p>Dockerfile 的各个指令可参考 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdocs.docker.com%2Fengine%2Freference%2Fbuilder%2F" title="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noreferrer">Dockerfile Reference</a>。</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> node:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#BABED8;"> package.json package-lock.json /code/</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#BABED8;"> /code</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#BABED8;"> npm install --production</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#BABED8;"> . /code</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#BABED8;"> npm start</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="from" tabindex="-1">FROM <a class="header-anchor" href="#from" aria-label="Permalink to &quot;FROM&quot;">​</a></h3><p>基于一个旧有的基础镜像，格式如下。</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> &lt;image&gt; [</span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> &lt;name&gt;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在多阶段构建时会用到</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> &lt;image&gt;[:&lt;tag&gt;] [</span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> &lt;name&gt;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> node:16-alpine</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> nginx:alpine</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>而以上所述的 node 与 nginx 基础镜像可在<a href="https://link.juejin.cn/?target=https%3A%2F%2Fhub.docker.com%2F" title="https://hub.docker.com/" target="_blank" rel="noreferrer">Docker Hub</a>中找到。</p><p>需要了解常用的 <code>alpine</code>、<code>node</code>、<code>nginx</code> 基础镜像。</p><h3 id="add" tabindex="-1">ADD <a class="header-anchor" href="#add" aria-label="Permalink to &quot;ADD&quot;">​</a></h3><p>把宿主机的文件或目录加入到镜像的文件系统中。</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#BABED8;"> [--chown=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#BABED8;"> . /code</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="run" tabindex="-1">RUN <a class="header-anchor" href="#run" aria-label="Permalink to &quot;RUN&quot;">​</a></h3><p>在镜像中执行命令，由于 <code>ufs</code> 的文件系统，它会在当前镜像的顶层新增一层。</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#BABED8;"> &lt;command&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#BABED8;"> npm run build</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="cmd" tabindex="-1">CMD <a class="header-anchor" href="#cmd" aria-label="Permalink to &quot;CMD&quot;">​</a></h3><p>指定容器如何启动。</p><p><strong>一个 <code>Dockerfile</code> 中只允许有一个 CMD</strong></p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># exec form, this is the preferred form</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#BABED8;"> [</span><span style="color:#C3E88D;">&quot;executable&quot;</span><span style="color:#BABED8;">,</span><span style="color:#C3E88D;">&quot;param1&quot;</span><span style="color:#BABED8;">,</span><span style="color:#C3E88D;">&quot;param2&quot;</span><span style="color:#BABED8;">] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># as default parameters to ENTRYPOINT</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#BABED8;"> [</span><span style="color:#C3E88D;">&quot;param1&quot;</span><span style="color:#BABED8;">,</span><span style="color:#C3E88D;">&quot;param2&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># shell form</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#BABED8;"> command param1 param2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#BABED8;"> npm start</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-label="Permalink to &quot;容器&quot;">​</a></h3><p>镜像与容器的关系，类似于代码与进程的关系。</p><ul><li><code>docker run</code> 创建容器</li><li><code>docker stop</code> 停止容器</li><li><code>docker rm</code> 删除容器</li></ul><h3 id="创建容器" tabindex="-1">创建容器 <a class="header-anchor" href="#创建容器" aria-label="Permalink to &quot;创建容器&quot;">​</a></h3><p>基于 <code>nginx</code> 镜像创建一个最简单的容器：启动一个最简单的 http 服务</p><p>使用 <code>docker run</code> 来启动容器，<code>docker ps</code> 查看容器启动状态</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 启动 nginx 容器，并在本地 8888 端口进行访问</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--rm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">8888</span><span style="color:#C3E88D;">:80</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nginx:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-l</span></span>
<span class="line"><span style="color:#FFCB6B;">CONTAINER</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ID</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">IMAGE</span><span style="color:#BABED8;">                </span><span style="color:#C3E88D;">COMMAND</span><span style="color:#BABED8;">                  </span><span style="color:#C3E88D;">CREATED</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">STATUS</span><span style="color:#BABED8;">              </span><span style="color:#C3E88D;">PORTS</span><span style="color:#BABED8;">                    </span><span style="color:#C3E88D;">NAMES</span></span>
<span class="line"><span style="color:#FFCB6B;">404e88f0d90c</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">nginx:alpine</span><span style="color:#BABED8;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nginx -g &#39;daemon of…</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">   </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">minutes</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">       </span><span style="color:#C3E88D;">Up</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">minutes</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">0.0</span><span style="color:#C3E88D;">.0.0:8888</span><span style="color:#BABED8;">-</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">80/tcp</span><span style="color:#BABED8;">     </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">CONTAINER</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ID</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">IMAGE</span><span style="color:#BABED8;">                </span><span style="color:#C3E88D;">COMMAND</span><span style="color:#BABED8;">                  </span><span style="color:#C3E88D;">CREATED</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">STATUS</span><span style="color:#BABED8;">              </span><span style="color:#C3E88D;">PORTS</span><span style="color:#BABED8;">                    </span><span style="color:#C3E88D;">NAMES</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>其中:</p><ul><li><code>--rm</code>：当停止容器时自动清楚容器</li><li><code>-it</code>：可交互式、赋予 tty 的方式</li><li><code>--name</code>：为容器指定名称</li><li><code>-p host-port:container-port</code>：宿主机与容器端口映射，方便容器对外提供服务</li><li><code>nginx:alpine</code>：基于该基础镜像创建容器</li></ul><p>此时在宿主机使用 <code>curl</code> 测试容器提供的服务是否正常</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$ curl localhost:8888</span></span>
<span class="line"><span style="color:#babed8;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;style&gt;</span></span>
<span class="line"><span style="color:#babed8;">    body {</span></span>
<span class="line"><span style="color:#babed8;">        width: 35em;</span></span>
<span class="line"><span style="color:#babed8;">        margin: 0 auto;</span></span>
<span class="line"><span style="color:#babed8;">        font-family: Tahoma, Verdana, Arial, sans-serif;</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">&lt;/style&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span></span>
<span class="line"><span style="color:#babed8;">working. Further configuration is required.&lt;/p&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">&lt;p&gt;For online documentation and support please refer to</span></span>
<span class="line"><span style="color:#babed8;">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span></span>
<span class="line"><span style="color:#babed8;">Commercial support is available at</span></span>
<span class="line"><span style="color:#babed8;">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;/html&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>那如果要进入容器环境中呢？使用 <code>docker exec -it container-name</code> 命令</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">sh</span></span>
<span class="line"><span style="color:#FFCB6B;">/</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#FFCB6B;">/</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#FFCB6B;">/</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="容器管理" tabindex="-1">容器管理 <a class="header-anchor" href="#容器管理" aria-label="Permalink to &quot;容器管理&quot;">​</a></h3><p><code>docker ps</code> 列出所有容器</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ps</span></span>
<span class="line"><span style="color:#FFCB6B;">CONTAINER</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ID</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">IMAGE</span><span style="color:#BABED8;">                </span><span style="color:#C3E88D;">COMMAND</span><span style="color:#BABED8;">                  </span><span style="color:#C3E88D;">CREATED</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">STATUS</span><span style="color:#BABED8;">              </span><span style="color:#C3E88D;">PORTS</span><span style="color:#BABED8;">                    </span><span style="color:#C3E88D;">NAMES</span></span>
<span class="line"><span style="color:#FFCB6B;">404e88f0d90c</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">nginx:alpine</span><span style="color:#BABED8;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nginx -g &#39;daemon of…</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">   </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">minutes</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">       </span><span style="color:#C3E88D;">Up</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">minutes</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">0.0</span><span style="color:#C3E88D;">.0.0:8888</span><span style="color:#BABED8;">-</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">80/tcp</span><span style="color:#BABED8;">     </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">498e7d74fb4f</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">nginx:alpine</span><span style="color:#BABED8;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nginx -g &#39;daemon of…</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">   </span><span style="color:#F78C6C;">7</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">minutes</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">       </span><span style="color:#C3E88D;">Up</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">7</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">minutes</span><span style="color:#BABED8;">        </span><span style="color:#F78C6C;">80</span><span style="color:#C3E88D;">/tcp</span><span style="color:#BABED8;">                   </span><span style="color:#C3E88D;">lucid_mirzakhani</span></span>
<span class="line"><span style="color:#FFCB6B;">2ce10556dc8f</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">redis:4.0.6-alpine</span><span style="color:#BABED8;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">docker-entrypoint.s…</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">   </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">months</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ago</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">Up</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">months</span><span style="color:#BABED8;">         </span><span style="color:#F78C6C;">0.0</span><span style="color:#C3E88D;">.0.0:6379</span><span style="color:#BABED8;">-</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">6379/tcp</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">apolloserverstarter_redis_1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>docker port</code> 查看容器端口映射</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">port</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">80/tcp</span><span style="color:#BABED8;"> -</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#C3E88D;">.0.0:8888</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>docker stats</code> 查看容器资源占用</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">stats</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">CONTAINER</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ID</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">NAME</span><span style="color:#BABED8;">                </span><span style="color:#C3E88D;">CPU</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">%</span><span style="color:#BABED8;">               </span><span style="color:#C3E88D;">MEM</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">USAGE</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">LIMIT</span><span style="color:#BABED8;">     </span><span style="color:#C3E88D;">MEM</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">%</span><span style="color:#BABED8;">               </span><span style="color:#C3E88D;">NET</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">I/O</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">BLOCK</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">I/O</span><span style="color:#BABED8;">           </span><span style="color:#C3E88D;">PIDS</span></span>
<span class="line"><span style="color:#FFCB6B;">404e88f0d90c</span><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">nginx</span><span style="color:#BABED8;">               </span><span style="color:#F78C6C;">0.00</span><span style="color:#C3E88D;">%</span><span style="color:#BABED8;">               </span><span style="color:#F78C6C;">1.395</span><span style="color:#C3E88D;">MiB</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.796</span><span style="color:#C3E88D;">GiB</span><span style="color:#BABED8;">   </span><span style="color:#F78C6C;">0.08</span><span style="color:#C3E88D;">%</span><span style="color:#BABED8;">               </span><span style="color:#F78C6C;">632</span><span style="color:#C3E88D;">B</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.27</span><span style="color:#C3E88D;">kB</span><span style="color:#BABED8;">       </span><span style="color:#F78C6C;">0</span><span style="color:#C3E88D;">B</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#C3E88D;">B</span><span style="color:#BABED8;">             </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="容器测试" tabindex="-1">容器测试 <a class="header-anchor" href="#容器测试" aria-label="Permalink to &quot;容器测试&quot;">​</a></h3><p>如果某时某个容器出现问题，可直接进入容器内部进行调试。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">container_nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="docker-compose" tabindex="-1">docker compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker compose&quot;">​</a></h3><p>在 docker compose v2 中，使用了 <code>docker compose</code> 命令去替代了 <code>docker-compose</code> 命令，可以通过 docker compose version 查看版本号。</p><blockquote><p>尽管目前 docker compose 最新版本为 v2，但是在本系列专栏中还是使用 v1 进行演示，自行替换即可。</p></blockquote><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version</span></span>
<span class="line"><span style="color:#FFCB6B;">Docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">v2.6.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果是 v1 版本，则需要通过 docker-compose 查看命令</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.29</span><span style="color:#C3E88D;">.2,</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#C3E88D;">becea4c</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-py</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">CPython</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3.7</span><span style="color:#C3E88D;">.10</span></span>
<span class="line"><span style="color:#FFCB6B;">OpenSSL</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">version:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">OpenSSL</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.1</span><span style="color:#C3E88D;">.0l</span><span style="color:#BABED8;">  </span><span style="color:#F78C6C;">10</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Sep</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2019</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在 2022 年 4 月 26 号，compose v2 已经成为了正式版本。更多见 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.docker.com%2Fblog%2Fannouncing-compose-v2-general-availability%2F" title="https://www.docker.com/blog/announcing-compose-v2-general-availability/" target="_blank" rel="noreferrer">Announcing Compose V2 General Availability</a></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 使用 docker compose ls，可列出系统全局有多少容器是根据 docker compose 启动，比 v1 版本方便很多</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"><span style="color:#FFCB6B;">NAME</span><span style="color:#BABED8;">                </span><span style="color:#C3E88D;">STATUS</span><span style="color:#BABED8;">              </span><span style="color:#C3E88D;">CONFIG</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">FILES</span></span>
<span class="line"><span style="color:#FFCB6B;">cra-deploy</span><span style="color:#BABED8;">          </span><span style="color:#C3E88D;">running</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">1</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">          </span><span style="color:#C3E88D;">/home/train/Documents/cra-deploy/domain.docker-compose.yaml</span></span>
<span class="line"><span style="color:#FFCB6B;">traefik</span><span style="color:#BABED8;">             </span><span style="color:#C3E88D;">running</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">1</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">          </span><span style="color:#C3E88D;">/home/train/Documents/traefik/docker-compose.yml</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在当前目录，新建配置文件为 <code>docker-compose.yaml</code>，内容如下。</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">version: &quot;3&quot;</span></span>
<span class="line"><span style="color:#babed8;">services:</span></span>
<span class="line"><span style="color:#babed8;">  app:</span></span>
<span class="line"><span style="color:#babed8;">    image: &quot;nginx:alpine&quot;</span></span>
<span class="line"><span style="color:#babed8;">    ports:</span></span>
<span class="line"><span style="color:#babed8;">      - 8000:80</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>此时可通过 <code>docker compose up</code> 启动容器。</p><p>至此，我们的全部docker教程结束，赶快去尝试一下吧！！！</p><p><a href="https://juejin.cn/post/7139724794672447518" target="_blank" rel="noreferrer">原文</a></p>`,171),o=[p];function c(r,t,i,d,y,b){return a(),n("div",null,o)}const u=s(e,[["render",c]]);export{D as __pageData,u as default};
