import{_ as e,o as c,c as o,N as d}from"./chunks/framework.60272d8a.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/vue3/vite的public目录.md","lastUpdated":1706686109000}'),t={name:"guide/vue3/vite的public目录.md"},a=d('<h2 id="一-public-目录" tabindex="-1">一，<code>public</code> 目录 <a class="header-anchor" href="#一-public-目录" aria-label="Permalink to &quot;一，`public` 目录&quot;">​</a></h2><p>1.<code>public</code> 目录是存放静态资源的一种方式。</p><p>2.项目初始化时默认<code>public</code>作为静态资源服务的文件夹。我们可以在<code>vite.config.js</code>中修改<code>publicDir</code>。</p><p>3.该目录中的文件开发期间在 <code>/</code> 处提供，并在构建期间将<code>public</code>文件夹下的文件（不包含<code>public</code>本身）复制到<code>outDir</code> 的根目录。</p><p>4.<strong><code>public</code>下的文件会被完整复制到目标目录的根目录下，保持原有文件名，不会被<code>hash</code></strong>。</p><h2 id="二-访问public-目录资源" tabindex="-1">二，访问<code>public</code> 目录资源 <a class="header-anchor" href="#二-访问public-目录资源" aria-label="Permalink to &quot;二，访问`public` 目录资源&quot;">​</a></h2><p>1.在开发时我们可以使用<code>/</code>开头直接访问<code>public</code> 目录下的资源<br><img src="https://img-blog.csdnimg.cn/a032176720e7464abef14d99bd05baa1.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/c62008946e9044de874589fcaf471269.png" alt="在这里插入图片描述"></p><p>2.<strong>当项目部署在嵌套的公共路径下，我们需要指定 <code>base</code> 配置项</strong>，由 <code>JS</code> 引入的资源 <code>URL</code>，<code>CSS</code> 中的 <code>url()</code> 引用以及 <code>.html</code> 文件中引用的资源在构建过程中都会自动调整，以适配此选项。<br><img src="https://img-blog.csdnimg.cn/7ced0c49b3084a39834a7ff12ce3eed6.png" alt="在这里插入图片描述"></p><p>上面的资源在构建后会变为<br><img src="https://img-blog.csdnimg.cn/3e9ba8ec52204f3e8c4689ca5de485e1.png" alt="在这里插入图片描述"></p><p>3.当访问过程中需要使用动态连接的 <code>url</code> 时，不能被自动调整，可以使用全局注入的 <code>i<wbr>mport.meta.env.BASE_URL</code> 变量，它的值为公共基础路径。</p>',11),i=[a];function p(l,r,s,n,b,u){return c(),o("div",null,i)}const m=e(t,[["render",p]]);export{g as __pageData,m as default};
