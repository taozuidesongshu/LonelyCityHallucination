import{_ as s,o as a,c as p,N as n}from"./chunks/framework.60272d8a.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/Deepin/软件包管理器apt.md","lastUpdated":1706686109000}'),t={name:"knowledge/Deepin/软件包管理器apt.md"},l=n(`<p>在<a href="https://so.csdn.net/so/search?q=ubuntu&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">ubuntu</a>下，安装软件经常会用到一个命令<code>apt-get install package</code>，这里的apt命令，其实是linux系统下一个通用的软件包管理器，使用该命令可以很方便的用来安装和卸载软件。然而，还有另外一个软件包管理器，叫做dpkg，它也可以实现软件的安装和卸载。那么，它们二者究竟各自负责什么，又有什么区别呢？</p><h3 id="_1、apt命令" tabindex="-1">1、apt命令 <a class="header-anchor" href="#_1、apt命令" aria-label="Permalink to &quot;1、apt命令&quot;">​</a></h3><p>Advanced Packaging Tool（apt）是Linux下的一款安装包管理工具，是一个客户/服务器系统。在服务器上先复制所有DEB包（DEB是Debian软件包格式的文件扩展名），然后用APT的分析工具（genbasedir）根据每个DEB 包的包头（Header）信息对所有的DEB包进行分析，并将该分析结果记录在一个文件中，这个文件称为DEB 索引清单，APT服务器的DEB索引清单置于base文件夹内。一旦APT 服务器内的DEB有所变动，一定要使用genbasedir产生新的DEB索引清单。客户端在进行安装或升级时先要查询DEB索引清单，从而可以获知所有具有依赖关系的软件包，并一同下载到客户端以便安装。</p><p>当客户端需要安装、升级或删除某个软件包时，客户端计算机取得DEB索引清单压缩文件后，会将其解压置放于<code>/var/state/apt/lists/</code>，而客户端使用<code>apt-get instal</code>l或<code>apt-get upgrade</code>命令的时候，就会将这个文件夹内的数据和客户端计算机内的DEB数据库比对，知道哪些DEB已安装、未安装或是可以升级的。</p><p><strong>apt命令的几个路径位置：</strong></p><ul><li>下载的软件存放位置：/var/cache/apt/archives</li><li>安装后软件默认位置：/usr/share</li><li>可执行文件位置：/usr/bin</li><li>配置文件位置：/etc</li><li>库文件位置：/usr/lib</li></ul><p><strong>常用的apt命令集：</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># package 安装包</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">reinstall</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># package - - reinstall 重新安装包</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">remove</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># package 删除包</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">remove</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--purge</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># package 删除包，包括删除配置文件等</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">autoremove</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--purge</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># package 删除包及其依赖的软件包配置文件等</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">update</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 更新源</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">upgrade</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 更新已安装的包</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">dist-upgrade</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 升级系统</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2、dpkg命令" tabindex="-1">2、dpkg命令 <a class="header-anchor" href="#_2、dpkg命令" aria-label="Permalink to &quot;2、dpkg命令&quot;">​</a></h3><p>Ubuntu是基于Debian的Linux系统，而Debian系统的软件是使用APT和dpkg进行管理。dpkg是&quot;Debian Packager&quot;的简写，是一个底层的软件包管理工具。</p><p>可以输入<code>dpkg -l</code>来查看软件的状态，输入<code>dpkg -P</code>来卸载软件。因为<code>dpkg --remove</code>只是删除安装的文件，但不删除配置文件。而<code>dpkg --purge</code>则安装文件和配置文件都删除。</p><p><strong>常用的dpkg命令：</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.deb#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">安装一个</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Debian</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">软件包，如手动下载的文件。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.deb#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">列出</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.deb</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">的内容。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-I</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.deb#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">从</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.deb</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">中提取包信息。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">移除一个已安装的包。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-P</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">完全清除一个已安装的包。和</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">remove</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">不同的是，remove</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">只是删掉数据和可执行文件，purge</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">另外还删除所有的配制文件。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">列出</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">安装的所有文件清单。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">显示已安装包的信息。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-reconfigure</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">重新配制一个已经安装的包，如果它使用的是</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">debconf</span><span style="color:#BABED8;"> (debconf </span><span style="color:#C3E88D;">为包安装提供了一个统一的配置界面</span><span style="color:#BABED8;">)。</span></span>
<span class="line"><span style="color:#FFCB6B;">dpkg</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-S</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package#</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">查看软件在哪个包里</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3、apt和dpkg的区别" tabindex="-1">3、apt和dpkg的区别 <a class="header-anchor" href="#_3、apt和dpkg的区别" aria-label="Permalink to &quot;3、apt和dpkg的区别&quot;">​</a></h3><ul><li>apt是会解决和安装模块的依赖问题，并会咨询软件仓库，是在线安装。</li><li><strong>dpkg只能安装本地的deb文件，不会关心Ubuntu的软件仓库内的软件，不会解决模块的依赖关系。</strong></li><li>两者的区别是dpkg绕过apt包管理数据库对软件包进行操作，所以你用dpkg安装过的软件包用apt可以再安装一遍，系统不知道之前安装过了，将会覆盖之前dpkg的安装。</li></ul><h3 id="_4、细分apt和apt-get命令的区别" tabindex="-1">4、细分apt和apt-get命令的区别 <a class="header-anchor" href="#_4、细分apt和apt-get命令的区别" aria-label="Permalink to &quot;4、细分apt和apt-get命令的区别&quot;">​</a></h3><ul><li><p>apt 命令的引入就是为了解决命令过于分散的问题，它包括了 apt-get 命令出现以来使用最广泛的功能选项，以及 apt-cache 和 apt-config 命令中很少用到的功能。</p></li><li><p>在使用 apt 命令时，用户不必再由 apt-get 转到 apt-cache 或 apt-config，而且 apt 更加结构化，并为用户提供了管理软件包所需的必要选项。</p></li></ul><h4 id="简单来说就是-apt-apt-get、apt-cache-和-apt-config-中最常用命令选项的集合。" tabindex="-1">简单来说就是：<code>apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。</code> <a class="header-anchor" href="#简单来说就是-apt-apt-get、apt-cache-和-apt-config-中最常用命令选项的集合。" aria-label="Permalink to &quot;简单来说就是：\`apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。\`&quot;">​</a></h4><p>虽然 apt 与 apt-get 有一些类似的命令选项，但它并不能完全向下兼容 apt-get 命令。也就是说，可以用 apt 替换部分 apt-get 系列命令，但不是全部。</p><table><thead><tr><th>apt 命令</th><th>取代的命令</th><th>命令的功能</th></tr></thead><tbody><tr><td>apt install</td><td>apt-get install</td><td>安装软件包</td></tr><tr><td>apt remove</td><td>apt-get remove</td><td>移除软件包</td></tr><tr><td>apt purge</td><td>apt-get purge</td><td>移除软件包及配置文件</td></tr><tr><td>apt update</td><td>apt-get update</td><td>刷新存储库索引</td></tr><tr><td>apt upgrade</td><td>apt-get upgrade</td><td>升级所有可升级的软件包</td></tr><tr><td>apt autoremove</td><td>apt-get autoremove</td><td>自动删除不需要的包</td></tr><tr><td>apt full-upgrade</td><td>apt-get dist-upgrade</td><td>在升级软件包时自动处理依赖关系</td></tr><tr><td>apt search</td><td>apt-cache search</td><td>搜索应用程序</td></tr><tr><td>apt show</td><td>apt-cache show</td><td>显示装细节</td></tr></tbody></table><p>当然，apt 还有一些自己的命令：</p><table><thead><tr><th>新的apt命令</th><th>命令的功能</th></tr></thead><tbody><tr><td>apt list</td><td>列出包含条件的包（已安装，可升级等）</td></tr><tr><td>apt edit-sources</td><td>编辑源列表</td></tr></tbody></table><p>值得注意的是：apt 命令还在不断发展， 因此，你可能会在将来的版本中看到新的选项。</p><p><strong>apt的优点：</strong></p><ul><li>具有更精减且足够的命令选项，而且参数选项的组织方式更为有效</li><li>在安装或删除程序时看到进度条</li><li>在更新存储库数据库时提示用户可升级的软件包个数</li><li>命令选项更少更易记，因此也更易用</li></ul><p><strong>apt的缺点：</strong></p><ul><li>对于低级操作，仍然需要 apt-get</li></ul>`,27),e=[l];function o(r,c,d,B,i,y){return a(),p("div",null,e)}const g=s(t,[["render",o]]);export{D as __pageData,g as default};
