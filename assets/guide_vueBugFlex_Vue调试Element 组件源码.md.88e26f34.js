import{_ as e,o as t,c as n,N as a}from"./chunks/framework.60272d8a.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/vueBugFlex/Vue调试Element 组件源码.md","lastUpdated":1706686109000}'),o={name:"guide/vueBugFlex/Vue调试Element 组件源码.md"},s=a(`<h2 id="vue如何调试element组件源码" tabindex="-1">Vue如何调试Element组件源码 <a class="header-anchor" href="#vue如何调试element组件源码" aria-label="Permalink to &quot;Vue如何调试Element组件源码&quot;">​</a></h2><p>Element 的源码在 <code>node_modules</code> 中 element-ui 文件夹中。起初修改 <code>node_modules/element-ui/packages/pagination/src/pagination.js</code>，无效。搜索一番得知，<code>webpack</code> 引入的是 lib 目录下的编译打包后的 js。遂修改 <code>node_modules/element-ui/lib/pagination.js</code>，还是无效，Excuse me？后经过调试发现element相关代码都整合进了 lib 下的一个 <code>element-ui.common.js</code> 文件。修改这个文件中的 Pagination 部分即可正常调试了。</p><p>调试过程就不细展开了，只是确认源码确实存在 bug 而已，可以自行修复。这时突然想到，Element 可能不是最新，也许可以升级一下看看？抱着试试看的心情，买了一个疗程，哦不对，打开本项目的 <code>package.json</code>，发现 <code>&quot;element-ui&quot;: &quot;2.3.3&quot;</code>，为什么是写死的2.3.3。。。。。。一查，最新的版本都到2.4.1了，而就在我 debug 过程中，2.4.2也出了。。。</p><p>element 版本改为<code>&quot;element-ui&quot;: &quot;^2.4.2&quot;</code>, 再执行更新</p><p>那个 bug 果然已经得到修复。想想要是我早一点升级 element-ui，也许就不会耽误这几个小时，但是，也不会学到后面的调试方法，不会接触到 Element 源码。对比一下，还是利大于弊的。</p><p>通过这次调试 bug，了解了组件源码是如何执行的，了解到了<a href="https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6" target="_blank" rel="noreferrer">.sync 修饰符和双向绑定</a></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">this.$emit(&#39;update:title&#39;, newTitle)</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>最后，总结这2个多星期的前端学习，就3点：</p><ol><li>做项目，可以接触很多前端技术点和框架,加快新技术上手速度</li><li>看官方文档，可以知道语言或框架的规范用法</li><li>看源码，能加深对技术和原理的理解。</li></ol>`,9),l=[s];function i(c,d,u,p,r,m){return t(),n("div",null,l)}const g=e(o,[["render",i]]);export{b as __pageData,g as default};
