import{_ as s,o as a,c as n,N as l}from"./chunks/framework.60272d8a.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"module/puppeteer/常用puppeteer爬虫api.md","lastUpdated":1706686109000}'),p={name:"module/puppeteer/常用puppeteer爬虫api.md"},e=l(`<h2 id="一、安装和使用" tabindex="-1">一、安装和使用 <a class="header-anchor" href="#一、安装和使用" aria-label="Permalink to &quot;一、安装和使用&quot;">​</a></h2><h3 id="_1-1安装" tabindex="-1">1.1安装 <a class="header-anchor" href="#_1-1安装" aria-label="Permalink to &quot;1.1安装&quot;">​</a></h3><p><code>cnpm i -S puppeteer</code> 用cnpm安装没有试过报错，默认会下载puppeteer配套版本的Chromium。</p><h3 id="_1-2-使用" tabindex="-1">1.2 使用 <a class="header-anchor" href="#_1-2-使用" aria-label="Permalink to &quot;1.2 使用&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> puppeteer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">puppeteer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">browser</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">puppeteer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">launch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    headless</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//默认为true（无头），不显示浏览器界面</span></span>
<span class="line"><span style="color:#F07178;">    slowMo </span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//减速显示，有时会作为模拟人操作特意减速</span></span>
<span class="line"><span style="color:#F07178;">    devtools</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//显示开发者工具。页面宽高默认800*600,把开发者工具显示再隐藏页面会占满屏幕，有没有大佬解释下？</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//生成Page对象</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//const page = await browser.newPage();//官网写法：一打开浏览器会打开两个tab，第二个才是你正在操作的tab</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">page</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">browser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pages</span><span style="color:#F07178;">())[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//这是我的写法，只有一个tab</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.juejin.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//跳转到掘金</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//请开始你的表演...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">browser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//关闭浏览器</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>puppeteer基本上每个操作都会返回一个Promise,记得要用await接收下一步的操作。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FGoogleChrome%2Fpuppeteer%2Ftree%2Fmaster%2Fexamples" title="https://github.com/GoogleChrome/puppeteer/tree/master/examples" target="_blank" rel="noreferrer">puppeteer上也提供了一些第三方写的爬虫demo</a>，不过感觉封装得有点多，先不玩。</p><h2 id="二、基本用法" tabindex="-1">二、基本用法 <a class="header-anchor" href="#二、基本用法" aria-label="Permalink to &quot;二、基本用法&quot;">​</a></h2><h3 id="_2-1-调整页面" tabindex="-1">2.1 调整页面 <a class="header-anchor" href="#_2-1-调整页面" aria-label="Permalink to &quot;2.1 调整页面&quot;">​</a></h3><p>页面宽高默认800*600,我觉得太小。我一般都会先初始化页面大小。</p><p>和上面说的一样，这只是初始化的时候的大小，当打开再隐藏开发者工具后，页面就会占满全屏了，不知道这是不是bug。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setViewport</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1280</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">800</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-2-模拟输入和点击" tabindex="-1">2.2 模拟输入和点击 <a class="header-anchor" href="#_2-2-模拟输入和点击" aria-label="Permalink to &quot;2.2 模拟输入和点击&quot;">​</a></h3><p>目测底层是用document.querySelector()</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">type</span><span style="color:#BABED8;">(selector</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello puppeteer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">//找到对应的选择器然后填充值。如果之前设置了slowMo会看到像人打字一样，值是一个一个填进&lt;input/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#BABED8;">(selector)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">//模拟点击，这对传统异步分页（url没有分页参数）很有用，selector定在下一页的标签上</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-3-iframe处理" tabindex="-1">2.3 iframe处理 <a class="header-anchor" href="#_2-3-iframe处理" aria-label="Permalink to &quot;2.3 iframe处理&quot;">​</a></h3><p>如果网页内有用iframe等标签，这时page对象是无法读取<code>&lt;iframe&gt;</code>里面的内容的，需要用到<code>page.frames()</code>。返回一个Frame对象数组。 通常iframe会有name属性，判断name属性可以快速获取单个Frame对象的内容。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> iframe </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">frames</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">iframe</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">f</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">name</span><span style="color:#BABED8;">() </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-4-waitfor函数" tabindex="-1">2.4 waitFor函数 <a class="header-anchor" href="#_2-4-waitfor函数" aria-label="Permalink to &quot;2.4 waitFor函数&quot;">​</a></h3><p>waitFor函数是简写，Page和Frame对象都有。我只会用以下两种方式，剩下了请大佬指点一下。</p><blockquote><p>为了简化，Page和Frame对象都有的api，我不会再特意说明，会在代码中直接体现。</p></blockquote><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> iframe</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">waitFor（</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.contain .item</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">） </span><span style="color:#676E95;font-style:italic;">//在&lt;iframe&gt;中等待&#39;.contain .item&#39;的节点出现，阻塞结束（ps:优先使用，有时200ms我是等不起的）</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">waitFor（</span><span style="color:#F78C6C;">200</span><span style="color:#BABED8;">）</span><span style="color:#676E95;font-style:italic;">//页面等待200ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-5-selector和emulate" tabindex="-1">2.5 selector和emulate <a class="header-anchor" href="#_2-5-selector和emulate" aria-label="Permalink to &quot;2.5 selector和emulate&quot;">​</a></h3><p>为什么要合在一点写呢？因为确实有一个组合的api叫<code>eval</code></p><p>先分开说说吧。</p><h4 id="_2-5-1-selector" tabindex="-1">2.5.1 selector <a class="header-anchor" href="#_2-5-1-selector" aria-label="Permalink to &quot;2.5.1 selector&quot;">​</a></h4><p>目测底层是用document.querySelector()和document.querySelectorAll()。熟悉这两个api的人应该很容易上手。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//ps:较少用</span></span>
<span class="line"><span style="color:#BABED8;">page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$</span><span style="color:#BABED8;">(selector) </span><span style="color:#676E95;font-style:italic;">// document.querySelector()</span></span>
<span class="line"><span style="color:#BABED8;">iframe</span><span style="color:#89DDFF;">.?</span><span style="color:#BABED8;">(selector) </span><span style="color:#676E95;font-style:italic;">// document.querySelectorAll()， ?是All的意思</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-5-2-emulate" tabindex="-1">2.5.2 emulate <a class="header-anchor" href="#_2-5-2-emulate" aria-label="Permalink to &quot;2.5.2 emulate&quot;">​</a></h4><p>这里首先要有个概念，puppeteer爬虫解析dom在浏览器，这个api的实参在浏览器中。所以可以在这个函数内进行dom操作，同时本地的node api是无法在这里运行的，运行<code>console.log(global)</code>会报错。</p><p>举个栗子：在函数内有<code>console.log(&#39;按f12,我出现在浏览器的console中，并不在node命令行&#39;)</code></p><p>你会发现node命令行看不到这句话，而在Chromium的console中看见。因此你应该理解他的运行环境是当前网站，而不是你本地的node。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//ps:更少用</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//喜闻乐见的dom操作</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> iframe</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//请开始你的表演</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">按f12,我出现在浏览器的console中，并不在node命令行</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-5-3-真正的主角-eval-和-eval" tabindex="-1">2.5.3 真正的主角 <code>$eval</code> 和 <code>?eval</code> <a class="header-anchor" href="#_2-5-3-真正的主角-eval-和-eval" aria-label="Permalink to &quot;2.5.3 真正的主角 \`$eval\` 和 \`?eval\`&quot;">​</a></h4><p>上面的两个api一起用就变成了eval，我最常用的api之一。一个api顶上面两个，集中一起写，舒服。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$eval</span><span style="color:#BABED8;">(selector</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//如果需要赋值要返回Promise</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//...一波骚操作</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//可以用Dom api啦</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">reslove</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">obj</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> iframe</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$$eval</span><span style="color:#BABED8;">(selector</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{...}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-6-监听事件" tabindex="-1">2.6 监听事件 <a class="header-anchor" href="#_2-6-监听事件" aria-label="Permalink to &quot;2.6 监听事件&quot;">​</a></h3><p>上文说过在<code>page.evaluate</code>中用<code>console</code>是不能在node命令行打印出来的，不过有了监听事件就可以改变这个规则了。也可以在监听事件里面做容错处理。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">console</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">msg</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">msg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>个人觉得如果打印dom的话，还是看浏览器的console比较好，直观。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//监听浏览器报错</span></span>
<span class="line"><span style="color:#BABED8;">page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pageerror</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">pageErr</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">pageErr</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//监听node报错</span></span>
<span class="line"><span style="color:#BABED8;">page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">err</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="三、伪装移动端" tabindex="-1">三、伪装移动端 <a class="header-anchor" href="#三、伪装移动端" aria-label="Permalink to &quot;三、伪装移动端&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> devices </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">puppeteer/DeviceDescriptors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> iPhone </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> devices[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">iPhone 6</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emulate</span><span style="color:#BABED8;">(iPhone)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="使用puppeteer-connect链接已有chrome浏览器" tabindex="-1">使用puppeteer.connect链接已有Chrome浏览器 <a class="header-anchor" href="#使用puppeteer-connect链接已有chrome浏览器" aria-label="Permalink to &quot;使用puppeteer.connect链接已有Chrome浏览器&quot;">​</a></h2><p>因为puppeteer.launch启动的Chrome浏览器，虽然可以传浏览器启动参数，但是不知道怎么都没能奏效，</p><p>而且关闭后又不能记住参数配置，真是头疼，上网各种搜索，也是没能解决。</p><p>于是 ，尝试换了一个思路，就是通过加载一个已经有的浏览器，这个已经安装的浏览器，可以在快捷方式中加启动参数，亲测这个有效。或者直接先打开浏览器，然后，手动配置好了，再启动puppeteer通过调试端口就可以了，算是一种绕路，解决了目前的需求。</p><ol><li>现在Chrome的桌面快捷方式中添加调试启动参数。 方法：快捷方式–右键属性–目标 在最后添加 --remote-debugging-port=9222即可，和.exe之间有个空格。</li><li>在浏览器中请求地址：<a href="http://%60localhost:9222/json/version%60" target="_blank" rel="noreferrer">http://\`localhost:9222/json/version\`</a> 是正常的GET请求，获得到webSocketDebuggerUrl参数。</li><li>用</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> browser </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> puppeteer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">browserWSEndpoint</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> webSocketDebuggerUrl</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>即可。</p><blockquote><p>docker 环境的话，最佳做法难道不是再搭一个 <a href="https://github.com/browserless/chrome" target="_blank" rel="noreferrer">browserless/chrome</a> ，然后装 puppeteer-core 连过去就行</p></blockquote><h2 id="puppeteer与puppeteer-core" tabindex="-1">puppeteer与puppeteer-core <a class="header-anchor" href="#puppeteer与puppeteer-core" aria-label="Permalink to &quot;puppeteer与puppeteer-core&quot;">​</a></h2><ul><li>puppeteer 安装这个版本的过程中，将下载 Chromium (~170MB Mac, ~282MB Linux, ~280MB Win)</li><li>puppeteer-core 这个版本不会下载 Chromium 除了是否下载 Chromium 的区别外，另一个区别就是，puppeteer-core 会忽略所有的 PUPPETEER_* 环境变量。</li></ul><p>到底应该使用哪个版本？按照极客思维，应该选择小的、简单的那个，然而官方一句话：在大多数情况下，使用 puppeteer 是不错的（In most cases, you’ll be fine using the puppeteer package. ）让我认为，官方建议使用 puppeteer 版本，除非特殊情况。</p>`,54),o=[e];function t(r,c,i,y,D,F){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{B as __pageData,b as default};
