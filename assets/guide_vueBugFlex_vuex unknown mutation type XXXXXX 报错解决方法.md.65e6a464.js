import{_ as e,o as t,c as n,N as a}from"./chunks/framework.60272d8a.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/vueBugFlex/vuex unknown mutation type XXXXXX 报错解决方法.md","lastUpdated":1706686109000}'),s={name:"guide/vueBugFlex/vuex unknown mutation type XXXXXX 报错解决方法.md"},o=a(`<h2 id="vuex-unknown-getter-xxx-xxx-报错解决方法" tabindex="-1">[vuex] unknown getter: XXX/XXX 报错解决方法 <a class="header-anchor" href="#vuex-unknown-getter-xxx-xxx-报错解决方法" aria-label="Permalink to &quot;[vuex] unknown getter: XXX/XXX 报错解决方法&quot;">​</a></h2><p>因为分模块了，所以我要调用liuxu或者test下面的mutations，然后就报错了，但是，如过我这样写就没问题<strong>this.$store.commit(‘changeHeight’)</strong>，但是如果我这样写，分模块的意义何在，研究了半天，突然看到官方文档，文档说</p><blockquote><p>默认情况下，模块内部的 action、mutation 和 getter 是注册在全局命名空间的——这样使得多个模块能够对同一 mutation 或 action 作出响应。</p></blockquote><p>这时候我明白了，<strong>this.$store.commit(‘changeHeight’)<strong>是注册在全局命名空间的，如果用</strong>this.$store.commit(‘liuxu/changeHeight’)</strong> 肯定报错，怎么解决呢，官方说了，你可以通过添加 <strong>namespaced: true</strong> 的方式使其成为带命名空间的模块，于是，我这样写了</p><p>加上<strong>namespaced: true</strong>的话，当模块被注册后，它的所有 getter、action 及 mutation 我们就可以通过以下方式来写了，例如</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">this.$store.commit(&#39;liuxu/changeHeight&#39;) // =&gt; liuxu/changeHeight</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>报错就解决了</p>`,7),i=[o];function r(u,c,p,l,_,g){return t(),n("div",null,i)}const X=e(s,[["render",r]]);export{m as __pageData,X as default};
