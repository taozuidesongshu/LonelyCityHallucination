import{_ as t,o as s,c as n,N as o}from"./chunks/framework.60272d8a.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/vue/mixins混入介绍.md","lastUpdated":1706686109000}'),r={name:"guide/vue/mixins混入介绍.md"},i=o('<h3 id="_1-什么是mixins" tabindex="-1">1.什么是mixins? <a class="header-anchor" href="#_1-什么是mixins" aria-label="Permalink to &quot;1.什么是mixins?&quot;">​</a></h3><ul><li>官方解释：混入（mixins）是一种分发Vue组件中<strong>可复用功能</strong>的非常灵活的方式。混入对象可以包含任意组件选项。当组件使用混入对象时，所有混入对象的选项将被混入该组件本身的选项。</li><li>白话文：混入（mixins）可以简单理解为常见的js函数封装。想象一下，如果有一个方法，你想在多个地方使用，是不是可以单独提取个文件来封装这个方法，这样所需要使用该方法的地方就都可以引用了，而不用再每个文件一一定义了。当然，它也不一定只干这一个事，也可以进行一些业务逻辑的拆分和组合，不过这个还是有一定风险的。</li></ul><h3 id="_2-混入-mixins-的方式。" tabindex="-1">2.混入（mixins）的方式。 <a class="header-anchor" href="#_2-混入-mixins-的方式。" aria-label="Permalink to &quot;2.混入（mixins）的方式。&quot;">​</a></h3><ul><li><p>按需混入（推荐）： 定义混入文件 在需要使用的组件内引入定义的混入文件</p></li><li><p>全局混入：</p></li></ul><p>一旦使用全局混入对象，将会影响到所有之后创建的 Vue 实例，故在实际业务开发中不推荐使用全局混入。</p><h3 id="_3-优先级" tabindex="-1">3. 优先级 <a class="header-anchor" href="#_3-优先级" aria-label="Permalink to &quot;3. 优先级&quot;">​</a></h3><ul><li>数据等：</li></ul><p><strong>混入文件</strong>的<strong>data数据</strong>、<strong>methods方法</strong>、<strong>compoments</strong>的优先级低于低于<strong>组件本身</strong>的。此时，<strong>组件本身</strong>的这些会覆盖<strong>混入文件</strong>的，故而<strong>组件本身</strong>的生效。</p><ul><li>钩子函数：</li></ul><p><strong>混入文件</strong>的<strong>created、mounted生命周期</strong>这些的优先级高于<strong>组件本身</strong>的。此时，<strong>混入文件</strong>的会覆盖<strong>组件本身</strong>的，故而<strong>混入文件</strong>的生效。</p>',10),e=[i];function a(l,_,g,d,m,c){return s(),n("div",null,e)}const h=t(r,[["render",a]]);export{p as __pageData,h as default};
