import{_ as s,o as n,c as a,N as l}from"./chunks/framework.60272d8a.js";const u=JSON.parse('{"title":"两个窗口如何实现通信 - 掘金","description":"","frontmatter":{},"headers":[],"relativePath":"guide/HTML&css/两个窗口如何实现通信.md","lastUpdated":1706686109000}'),p={name:"guide/HTML&css/两个窗口如何实现通信.md"},e=l(`<h1 id="两个窗口如何实现通信-掘金" tabindex="-1">两个窗口如何实现通信 - 掘金 <a class="header-anchor" href="#两个窗口如何实现通信-掘金" aria-label="Permalink to &quot;两个窗口如何实现通信 - 掘金&quot;">​</a></h1><p>在工作中就出现的这种问题，开发的产品的页面需要嵌入到公司中其他产品中，因为是不同的产品，属于不同的系统，最简单的方式就是iframe和window.open()的方式，我选择的是window.open()的方式，因为实现的效果就是点击某个按钮才显示该页面，使用window.open()的方式对于布局都比较好控制，这时就有个问题了。因为开发产品页面直接需要获取该用户在其他产品时的用户信息和产品信息，就涉及到了如何传递信息的问题了</p><h2 id="window-open-的参数介绍" tabindex="-1">window.open()的参数介绍 <a class="header-anchor" href="#window-open-的参数介绍" aria-label="Permalink to &quot;window.open()的参数介绍&quot;">​</a></h2><p>对于window.open()一般可以设置三个参数，这里就简单介绍了，如果需要更深入的了解就请自己查找资料</p><ul><li><p>第一个参数，打开新窗口的url地址</p></li><li><p>第二个参数，给新窗口的名字(name)，并不是新窗口在窗口显示的title，在窗口下，通过window.name的方式拿到</p><ul><li>这里也可以设置<code>_self</code>(在旧窗口打开新窗口)，<code>_blank</code>(重新打开新窗口，默认就是该模式)</li></ul></li><li><p>第三个参数，设置打开新窗口的宽高等</p><ul><li><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">一般设置&#39;left=100,top=100,width=400,height=400&#39;,四个参数，其他参数可能有浏览器兼容问题</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul></li></ul><p>返回值——新窗口的window引用</p><p>这时就有个疑问了，在设置第二参数时，我又想设置_self又想给新窗口设置name怎么办？</p><p>可以使用如下方式：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> targetWindow </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">_self</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">targetWindow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">targetWindow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">location</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">href </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:8081/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>你会想这样写这么麻烦，下面这么写不就很简单啊</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> targetWindow </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:8081/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">_self</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">targetWindow</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>根据MDN中的介绍(<a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FWindow%2Fopen" title="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open" target="_blank" rel="noreferrer">Window：open() 方法 - Web API 接口参考 | MDN (mozilla.org)</a>)</p><p><code>URL 的实际获取是延迟进行的，并在当前脚本块执行完毕后开始。窗口创建和引用资源的加载是异步进行的。</code></p><p>在第一种方法中并没有url的加载，所以窗口是已经创建了，再给这个窗口设置的name。第二种方法有url的异步加载，该窗口并没有被创建好，就给这个窗口设置name，自然就无效了。</p><h2 id="_1-使用url携带参数的形式" tabindex="-1">1.使用url携带参数的形式 <a class="header-anchor" href="#_1-使用url携带参数的形式" aria-label="Permalink to &quot;1.使用url携带参数的形式&quot;">​</a></h2><p>可能最容易想到的方式就是使用url上携带参数的形式了，但是这种方式对于传递多种数据是不方便的，而且安全性也是个问题</p><h2 id="_2-使用postmessage的方式-使用环境-vue" tabindex="-1">2.使用postMessage的方式(使用环境：Vue) <a class="header-anchor" href="#_2-使用postmessage的方式-使用环境-vue" aria-label="Permalink to &quot;2.使用postMessage的方式(使用环境：Vue)&quot;">​</a></h2><p>通过查找资料发现了这种比较有意思的方式，这种方式竟然对于跨域也是可以解决的，这不正合我意。</p><p>postMessage常用参数</p><ul><li>第一个参数，就是传递的消息message，可以使用字符串，信息过多可以使用JSON.stringify()的方式</li><li>第二个参数，就是发送的url地址，也可以使用*来代替，但是不安全</li></ul><p>发送方使用postMessage，接收方绑定message事件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 判断是否是旧窗口发过来的，这个if判断是必须的，然后会多接收一些不想接收的消息，就是信息还没有发送过来，绑定message事件会有默认信息</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">origin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:8080</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.data——接收到的信息</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.origin——发送发的url地址，如果没有if判断，就会返回接收方的url(默认信息)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.source——发送方的window引用，如果没有if判断，就会返回接收方的window(默认信息)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.origin和e.source结合可以让接收方向发送方发送信息，从而达到双向通信</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>我就直接介绍跨域的方式如何使用，对于同源的方式也可以使用该方式，也有其他方式。</p><p>我想要的，</p><h2 id="旧窗口把信息传给新窗口" tabindex="-1">旧窗口把信息传给新窗口 <a class="header-anchor" href="#旧窗口把信息传给新窗口" aria-label="Permalink to &quot;旧窗口把信息传给新窗口&quot;">​</a></h2><p>旧窗口</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">// http://localhost:8080/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">open</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">打开新窗口</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">export default {</span></span>
<span class="line"><span style="color:#BABED8;"> name: &#39;App&#39;,</span></span>
<span class="line"><span style="color:#BABED8;"> data () {</span></span>
<span class="line"><span style="color:#BABED8;">  this.targetWindow = null</span></span>
<span class="line"><span style="color:#BABED8;">  return {</span></span>
<span class="line"><span style="color:#BABED8;">   }</span></span>
<span class="line"><span style="color:#BABED8;">  },</span></span>
<span class="line"><span style="color:#BABED8;"> methods: {</span></span>
<span class="line"><span style="color:#BABED8;">  open() {</span></span>
<span class="line"><span style="color:#BABED8;">   this.targetWindow = window.open(&#39;http://localhost:8081/&#39;, &#39;_blank&#39;, &#39;left=100,top=100,width=400,height=400&#39;)</span></span>
<span class="line"><span style="color:#BABED8;">   // 为什么加定时器，主要是为了防止window.open()异步加载，页面没有加载出来，就把消息发送出去了，有更好的方式也可以使用其他方式</span></span>
<span class="line"><span style="color:#BABED8;">   setTimeout(() =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">    this.targetWindow.postMessage(&#39;旧窗口向新窗口发送的消息&#39;, &#39;http://localhost:8081/&#39;)</span></span>
<span class="line"><span style="color:#BABED8;">    }, 1000)</span></span>
<span class="line"><span style="color:#BABED8;">   }</span></span>
<span class="line"><span style="color:#BABED8;">  }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>新窗口</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">// http://localhost:8081/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  新窗口</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">export default {</span></span>
<span class="line"><span style="color:#BABED8;"> name: &#39;App&#39;,</span></span>
<span class="line"><span style="color:#BABED8;"> mounted() {</span></span>
<span class="line"><span style="color:#BABED8;">  window.addEventListener(&quot;message&quot;,(e) =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">   if (e.origin !== &quot;http://localhost:8080&quot;) return;</span></span>
<span class="line"><span style="color:#BABED8;">    //发送方发送的信息</span></span>
<span class="line"><span style="color:#BABED8;">     console.log(e.data)</span></span>
<span class="line"><span style="color:#BABED8;">   })</span></span>
<span class="line"><span style="color:#BABED8;">  }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="旧窗口可以向新窗口发信息-新窗口也可以发送信息给旧窗口" tabindex="-1">旧窗口可以向新窗口发信息，新窗口也可以发送信息给旧窗口 <a class="header-anchor" href="#旧窗口可以向新窗口发信息-新窗口也可以发送信息给旧窗口" aria-label="Permalink to &quot;旧窗口可以向新窗口发信息，新窗口也可以发送信息给旧窗口&quot;">​</a></h2><p>旧窗口</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">// http://localhost:8080/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">open</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">打开新窗口</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sendNew</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">向新窗口传消息</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  旧窗口接收到的信息:{{ text }}</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">export default {</span></span>
<span class="line"><span style="color:#BABED8;"> name: &#39;App&#39;,</span></span>
<span class="line"><span style="color:#BABED8;"> data () {</span></span>
<span class="line"><span style="color:#BABED8;">  this.targetWindow = null</span></span>
<span class="line"><span style="color:#BABED8;">  return {</span></span>
<span class="line"><span style="color:#BABED8;">   text: &#39;&#39;</span></span>
<span class="line"><span style="color:#BABED8;">   }</span></span>
<span class="line"><span style="color:#BABED8;">  },</span></span>
<span class="line"><span style="color:#BABED8;"> mounted() {</span></span>
<span class="line"><span style="color:#BABED8;">  window.addEventListener(&#39;message&#39;,(e) =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">   if (e.origin !== &quot;http://localhost:8081/&quot;) return;</span></span>
<span class="line"><span style="color:#BABED8;">   console.log(e.data)</span></span>
<span class="line"><span style="color:#BABED8;">   this.text += e.data</span></span>
<span class="line"><span style="color:#BABED8;">   })</span></span>
<span class="line"><span style="color:#BABED8;">  },</span></span>
<span class="line"><span style="color:#BABED8;"> methods: {</span></span>
<span class="line"><span style="color:#BABED8;">  open() {</span></span>
<span class="line"><span style="color:#BABED8;">   this.targetWindow = window.open(&#39;http://192.168.3.76:8081/&#39;, &#39;_blank&#39;, &#39;left=100,top=100,width=400,height=400&#39;)</span></span>
<span class="line"><span style="color:#BABED8;">   setTimeout(() =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">    this.targetWindow.postMessage(&#39;旧窗口向新窗口发送的消息&#39;, &#39;http://192.168.3.76:8081/&#39;)</span></span>
<span class="line"><span style="color:#BABED8;">    }, 1000)</span></span>
<span class="line"><span style="color:#BABED8;">   },</span></span>
<span class="line"><span style="color:#BABED8;">  sendNew() {</span></span>
<span class="line"><span style="color:#BABED8;">   this.targetWindow.postMessage(&#39;旧窗口通过按钮发送给新窗口的消息&#39;, &#39;http://localhost:8081/&#39;)</span></span>
<span class="line"><span style="color:#BABED8;">   }</span></span>
<span class="line"><span style="color:#BABED8;">  }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>新窗口</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">//http://localhost:8081/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  新窗口</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sendOld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">向旧窗口发送消息</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 接收旧窗口发送的消息 --&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  接收旧窗口发送的消息:{{ text }}</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">export default {</span></span>
<span class="line"><span style="color:#BABED8;"> name: &#39;App&#39;,</span></span>
<span class="line"><span style="color:#BABED8;"> components: {</span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#BABED8;">  },</span></span>
<span class="line"><span style="color:#BABED8;"> data() {</span></span>
<span class="line"><span style="color:#BABED8;">  this.oldWindow = null</span></span>
<span class="line"><span style="color:#BABED8;">  this.oldOrigin = null</span></span>
<span class="line"><span style="color:#BABED8;">  return {</span></span>
<span class="line"><span style="color:#BABED8;">   text: &#39;&#39;</span></span>
<span class="line"><span style="color:#BABED8;">   }</span></span>
<span class="line"><span style="color:#BABED8;">  },</span></span>
<span class="line"><span style="color:#BABED8;"> mounted() {</span></span>
<span class="line"><span style="color:#BABED8;">  window.addEventListener(&quot;message&quot;,(e) =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">   if (e.origin !== &quot;http://localhost:8080&quot;) return;</span></span>
<span class="line"><span style="color:#BABED8;">   this.text += e.data</span></span>
<span class="line"><span style="color:#BABED8;">   this.oldWindow = e.source</span></span>
<span class="line"><span style="color:#BABED8;">   this.oldOrigin = e.origin</span></span>
<span class="line"><span style="color:#BABED8;">   })</span></span>
<span class="line"><span style="color:#BABED8;">  console.log(window.name)</span></span>
<span class="line"><span style="color:#BABED8;">  },</span></span>
<span class="line"><span style="color:#BABED8;"> methods: {</span></span>
<span class="line"><span style="color:#BABED8;">  sendOld() {</span></span>
<span class="line"><span style="color:#BABED8;">   this.oldWindow.postMessage(&#39;新窗口通过按钮给旧窗口发送的消息&#39;, this.oldOrigin)</span></span>
<span class="line"><span style="color:#BABED8;">   }</span></span>
<span class="line"><span style="color:#BABED8;">  }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>看到这里你可能发现有段代码很怪，为什么有些数据声明在return上面的，这么做是因为让这个数据失去响应式，如果声明在return内是有响应式的，这时this.targetWindow = window.open()在控制台会出现跨域的报错。原因是因为给它赋值是打开子窗口的window，赋值会就会监听targetWindow，就相当于在父窗口去对子窗口做操作，就造成了跨域的问题。</p><h2 id="_3-使用window-name的方式传递信息" tabindex="-1">3.使用window.name的方式传递信息 <a class="header-anchor" href="#_3-使用window-name的方式传递信息" aria-label="Permalink to &quot;3.使用window.name的方式传递信息&quot;">​</a></h2><p>利用window.open()的第二个参数，把信息传给新窗口</p><p>旧窗口</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:8081/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">要传递的信息</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>新窗口</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">console.log(window.name)</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-创建频道对象-broadcastchannel" tabindex="-1">4.创建频道对象 BroadcastChannel <a class="header-anchor" href="#_4-创建频道对象-broadcastchannel" aria-label="Permalink to &quot;4.创建频道对象 BroadcastChannel&quot;">​</a></h2><p>1、创建一个频道对象：const setChannel = new BroadcastChannel(&#39;demos&#39;); 2、用postMessage和onMessage进行通信</p><p><code>BroadcastChannel</code> API 允许您发送和接收在同一源（同一协议，主机和端口）的不同文档（例如，来自同一应用的不同选项卡或窗口）之间发送消息。</p><p>这是如何使用 <code>BroadcastChannel</code> API 的一个简单例子：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建一个名为 &#39;my_channel&#39; 的新广播频道</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bc </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">BroadcastChannel</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_channel</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 监听 &#39;message&#39; 事件以接收消息</span></span>
<span class="line"><span style="color:#BABED8;">bc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onmessage</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">event</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 发送一条消息</span></span>
<span class="line"><span style="color:#BABED8;">bc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postMessage</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">This is a test message.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>在这个例子中，我们首先使用 <code>new BroadcastChannel()</code> 构造函数创建了一个新的广播频道。我们给这个频道命名为 &#39;my_channel&#39;。</p><p>然后，我们设置 <code>onmessage</code> 事件处理函数来监听 &#39;message&#39; 事件。每当我们的频道接收到一条消息时，这个函数就会被调用，事件对象将被传递给该函数。我们可以通过 <code>event.data</code> 访问接收到的消息。</p><p>最后，我们使用 <code>postMessage()</code> 方法发送一条消息。这条消息将被所有监听 &#39;my_channel&#39; 频道的文档接收。</p><p>需要注意的是，<code>BroadcastChannel</code> API 只在安全上下文（HTTPS，localhost，或者文件系统）中可用，并且在某些浏览器中可能不被支持。在使用之前，建议检查浏览器的兼容性。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>如果就是旧窗口传递信息给新窗口，不需要新窗口给旧窗口传递信息，且只传一次，三种方式都可以，推荐使用第三种方式</p><p>如果想实现两个窗口通信的话，就使用第二种方式</p>`,53),o=[e];function r(t,c,i,D,y,b){return n(),a("div",null,o)}const B=s(p,[["render",r]]);export{u as __pageData,B as default};
