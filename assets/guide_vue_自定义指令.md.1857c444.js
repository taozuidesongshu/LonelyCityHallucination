import{_ as a,o as l,c as p,N as n,x as s}from"./chunks/framework.60272d8a.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/vue/自定义指令.md","lastUpdated":1706686109000}'),e={name:"guide/vue/自定义指令.md"},o=n(`<h2 id="自定义指令传参" tabindex="-1">自定义指令传参 <a class="header-anchor" href="#自定义指令传参" aria-label="Permalink to &quot;自定义指令传参&quot;">​</a></h2><p>在main.js中定义一个指令。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">directive</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zoom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">binding</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">vnode</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">binding</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">arg</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">//     {a:1,b:2}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">update</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">unbind</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>使用自定义指令，在任意一个html元素中，使用指令。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;"># :{a:1,b:2} 为自定义参数 </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-zoom:{a:1,b:2}</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{width: 800, height: 1000}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,5),t=s("ul",null,[s("li",{"a:1,b:2":""},"方式一：v-zoom:"),s("li",null,"对于{a:1,b:2}，在binding属性中，以字符串的形式传递，故可以写[1,2]、true等数据格式，但是最后拿到的都是字符串类型。"),s("li",null,'方式二：v-zoom="{width: 800, height: 1000}"'),s("li",null,"等号后面的{width: 800, height: 1000}，可以在binding的value属性中获取的数据的类型没有变化，"),s("li",null,"可以直接使用。width后面的数字,可以用当前组件的参数替换。"),s("li",null,"方式三：v-zoom.a.b")],-1),r=n(`<blockquote><p>除了 <code>el</code> 之外，其它参数都应该是只读的，切勿进行修改。如果需要在钩子之间共享数据，建议通过元素的 dataset 来进行。</p></blockquote><h2 id="防抖" tabindex="-1">防抖 <a class="header-anchor" href="#防抖" aria-label="Permalink to &quot;防抖&quot;">​</a></h2><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-debounce</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">addTag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">directives:{</span></span>
<span class="line"><span style="color:#BABED8;">      debounce :{</span></span>
<span class="line"><span style="color:#BABED8;">        inserted: function (el, binding,vnode,oldVnode) {</span></span>
<span class="line"><span style="color:#BABED8;">          let timer</span></span>
<span class="line"><span style="color:#BABED8;">          // 为当前绑定元素绑定点击事件</span></span>
<span class="line"><span style="color:#BABED8;">          el.addEventListener(&#39;click&#39;, () =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">          //清除上一次点击添加的定时器</span></span>
<span class="line"><span style="color:#BABED8;">            if (timer) {</span></span>
<span class="line"><span style="color:#BABED8;">              clearTimeout(timer)</span></span>
<span class="line"><span style="color:#BABED8;">            }</span></span>
<span class="line"><span style="color:#BABED8;">            let callNow = !timer</span></span>
<span class="line"><span style="color:#BABED8;">            timer = setTimeout(() =&gt; {</span></span>
<span class="line"><span style="color:#BABED8;">              timer=null</span></span>
<span class="line"><span style="color:#BABED8;">            }, 1000)</span></span>
<span class="line"><span style="color:#BABED8;">            //若点击不快则执行绑定的方法</span></span>
<span class="line"><span style="color:#BABED8;">            if(callNow){</span></span>
<span class="line"><span style="color:#BABED8;">              binding.value()</span></span>
<span class="line"><span style="color:#BABED8;">            }</span></span>
<span class="line"><span style="color:#BABED8;">          })</span></span>
<span class="line"><span style="color:#BABED8;">        },</span></span>
<span class="line"><span style="color:#BABED8;">      }</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="实用的自定义指令" tabindex="-1">实用的自定义指令 <a class="header-anchor" href="#实用的自定义指令" aria-label="Permalink to &quot;实用的自定义指令&quot;">​</a></h2><p><a href="https://segmentfault.com/a/1190000038475001" target="_blank" rel="noreferrer">分享8个非常实用的Vue自定义指令</a></p><p><a href="https://juejin.cn/post/7112376862365450248" target="_blank" rel="noreferrer">我有一个牛逼的防抖，你要不要学</a></p>`,7),c=[o,t,r];function i(D,y,b,u,d,B){return l(),p("div",null,c)}const A=a(e,[["render",i]]);export{m as __pageData,A as default};
